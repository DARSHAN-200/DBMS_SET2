Problem Statement 3 (Unnamed Block) 
Employee( emp_id, dept_idemp_name, DoJ, salary, commission,job_title) 
Salary_Increment(emp_id, new_salary) 
Consider the schema given above. Write a PLSQL Unnamed Block of code to increase the salary of employee
 115 based on the following conditions:  
Accept emp_id from user. If experience of employee is more than 10 years, increase salary by 20%. If experience
 is greater than 5 years, increase salary by 10% Otherwise 5%. (Hint: Find the years of experience from Date of
 Joining (DoJ)). Store the incremented salary in Salary_Increment table. 
Also handle the exception by named exception handler or user defined exception handler.




-- Creating Employee table
CREATE TABLE Employee (
    emp_id INT PRIMARY KEY,       -- Employee ID
    emp_name VARCHAR(100),        -- Employee Name
    DoJ DATE,                     -- Date of Joining
    salary DECIMAL(10, 2),         -- Current salary (decimal for precision)
    commission DECIMAL(5, 2),     -- Commission (if any)
    job_title VARCHAR(50)         -- Job Title
);

-- Creating Salary_Increment table
CREATE TABLE Salary_Increment (
    emp_id INT PRIMARY KEY,       -- Employee ID
    new_salary DECIMAL(10, 2)     -- New incremented salary
);
INSERT INTO Employee (emp_id, emp_name, DoJ, salary, commission, job_title)
VALUES (115, 'John Doe', '2010-06-15', 5000.00, 0.00, 'Developer');

DELIMITER $$


CREATE PROCEDURE UpdateSalary(IN v_emp_id INT)
BEGIN
    DECLARE v_salary DECIMAL(10, 2);
    DECLARE v_new_salary DECIMAL(10, 2);
    DECLARE v_experience INT;
    DECLARE v_doj DATE;

    SELECT salary, DoJ
    INTO v_salary, v_doj
    FROM Employee
    WHERE emp_id = v_emp_id;


    IF v_salary IS NULL THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Employee ID not found. Please check the provided employee ID.';
    END IF;

   
    SET v_experience = TIMESTAMPDIFF(YEAR, v_doj, CURDATE());


    IF v_experience > 10 THEN
        SET v_new_salary = v_salary * 1.20;  -- 20% increase if experience > 10 years
    ELSEIF v_experience > 5 THEN
        SET v_new_salary = v_salary * 1.10;  -- 10% increase if experience > 5 years
    ELSE
        SET v_new_salary = v_salary * 1.05;  -- 5% increase otherwise
    END IF;

   
    INSERT INTO Salary_Increment (emp_id, new_salary)
    VALUES (v_emp_id, v_new_salary);

  
    SELECT v_new_salary AS NewSalary;

END $$

DELIMITER ;