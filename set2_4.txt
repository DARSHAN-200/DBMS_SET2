Problem Statement 4 (AGGREGATION & INDEXING USING MONGODB) 
Create the Collection Student_Data( Student _ID,  Student _Name, Department, Marks )and solve the
 following: 
1. Display all Students based on their departments along with an average Marks of a particular
 department. 
2. Displays the number of Students associated along with a particular department. 
3. Display list of Students with the highest Marks in each Department in descending order 
of Marks. 
4. Create an index on field Student_ID. 
5. Create an index on fields “Student_Name‘ and “Department”. 
6. Drop an index on field Student_ID. 
7. Drop an index on fields “Student_Name‘ and “Department”.

db.createCollection("Student_Data");
db.Student_Data.insertMany([
  {
    "Student_ID": "S01",
    "Student_Name": "John Doe",
    "Department": "Computer Science",
    "Marks": 85
  },
  {
    "Student_ID": "S02",
    "Student_Name": "Jane Smith",
    "Department": "Electrical Engineering",
    "Marks": 78
  },
  {
    "Student_ID": "S03",
    "Student_Name": "Sam Green",
    "Department": "Mechanical Engineering",
    "Marks": 90
  },
  {
    "Student_ID": "S04",
    "Student_Name": "Alice Brown",
    "Department": "Computer Science",
    "Marks": 92
  },
  {
    "Student_ID": "S05",
    "Student_Name": "Bob White",
    "Department": "Electrical Engineering",
    "Marks": 76
  },
  {
    "Student_ID": "S06",
    "Student_Name": "Emma Black",
    "Department": "Mechanical Engineering",
    "Marks": 88
  },
  {
    "Student_ID": "S07",
    "Student_Name": "Michael Blue",
    "Department": "Computer Science",
    "Marks": 65
  },
  {
    "Student_ID": "S08",
    "Student_Name": "Lily Grey",
    "Department": "Electrical Engineering",
    "Marks": 80
  },
  {
    "Student_ID": "S09",
    "Student_Name": "David Yellow",
    "Department": "Mechanical Engineering",
    "Marks": 70
  },
  {
    "Student_ID": "S10",
    "Student_Name": "Sophia Red",
    "Department": "Computer Science",
    "Marks": 95
  }
])
1.db.Student_Data.aggregate([
  { $group: { 
      _id: "$Department", 
      averageMarks: { $avg: "$Marks" } 
    } },
  { $sort: { averageMarks: -1 } }  // Sort by averageMarks in descending order
])
2.db.Student_Data.aggregate([
  { $group: { 
      _id: "$Department", 
      studentCount: { $sum: 1 } 
    } }
])
3.db.Student_Data.aggregate([
  { $sort: { "Marks": -1 } },  // Sort students by marks in descending order
  { $group: { 
      _id: "$Department", 
      topStudent: { $first: "$Student_Name" }, 
      highestMarks: { $first: "$Marks" }
    } }
])
4.db.Student_Data.createIndex({ "Student_ID": 1 })
5.db.Student_Data.createIndex({ "Student_Name": 1, "Department": 1 })
6.db.Student_Data.dropIndex("Student_ID_1")
7.db.Student_Data.dropIndex({ "Student_Name": 1, "Department": 1 })